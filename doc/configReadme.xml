<?xml version="1.0"?>
<configuration>
	<placeholders>
		<placeholder id="template_name">Sap to Workday Employee Migration</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
As a SAP admin I want to migrate employees to Workday.

This Anypoint Template should serve as a foundation for the process of migrating Employees from SAP instance to Workday, being able to specify available filtering criteria and desired behavior when an employee already exists in the destination system. 

As implemented, this Anypoint Template leverages the [Batch Module](http://www.mulesoft.org/documentation/display/current/Batch+Processing).
The batch job is divided into Input, Process and On Complete stages.
During the Input stage the Anypoint Template will go to the SAP and query all the employees that match the filter criteria. The criteria is based on available filtering fields for standard BAPI BAPI_EMPLOYEE_GETDATA.
The last step of the Process stage will create/update employees in Workday using HIRE_EMPLOYEE function call.
Finally during the On Complete stage the Anypoint Template will both output statistics data into the console and send a notification email with the results of the batch execution. 
		</section>
		<section id="considerations">
<![CDATA[
To make this Anypoint Template run, there are certain preconditions that must be considered. All of them deal with the preparations in both source and destination systems, that must be made in order for all to run smoothly. **Failling to do so could lead to unexpected behavior of the template.**

## Disclaimer

This Anypoint template uses a few private Maven dependencies in order to work. If you intend to run this template with Maven support, please continue reading.

You will find that there are three dependencies in the pom.xml file that begin with the following group id: 
	**com.sap.conn.jco** 
These dependencies are private for Mulesoft and will cause you application not to build from a Maven command line. You need to replace them with "provided" scope and copy the libraries into the build path.

Standard BAPI for retrieving employees from SAP does not support lastModifiedDate criteria. So if you need this functionality you will have to implement custom BAPI for this to work.
]]>
		</section>
		<section id="run_it">
<![CDATA[
In any of the ways you would like to run this Anypoint Template this is an example of the output you'll see after hitting the HTTP endpoint:

<pre>
<h1>Batch Process initiated</h1>
<b>ID:</b>6eea3cc6-7c96-11e3-9a65-55f9f3ae584e<br/>
<b>Records to Be Processed: </b>9<br/>
<b>Start execution on: </b>Thu Sep 24 18:05:33 GMT-03:00 2014
</pre>
]]>
		</section>
		<section id="running_on_cloudhub">
<![CDATA[
Once your app is all set and started, supposing you choose `sapemployeemigration` as domain name to trigger the use case you just need to hit `http://sapemployeemigration.cloudhub.io/migrateemployees` and report will be sent to the email configured.
]]>
		</section>
		<section id="running_on_standalone">
<![CDATA[
After this, to trigger the use case you just need to hit the local HTTP Listener with the port you configured in the properties file. If this is, for instance, `9090` then you should hit: `http://localhost:9090/migrateemployees` and this will output a summary report and send it in the email.
]]>
		</section>
		<section id="application_configuration">
		<![CDATA[
+ http.port `9090`

#### Workday Connector configuration
+ wday.user `user`
+ wday.password `secret`
+ wday.endpoint `https://impl-cc.workday.com/...`

+ wday.jobprofileId `39905`
+ wday.country `USA`
+ wday.state `USA-CA`
+ wday.organization `SUPERVISORY_ORGANIZATION-6-235`
+ wday.postalCode `90001`
+ wday.city `San Francisco`
+ wday.location `San_Francisco_Site`
+ wday.currency `USD`
+ wday.address `New York`
+ wday.system.id `System id`
+ wday.email `john.doe@aol.com`

#### SAP Connector configuration
+ sap.jco.ashost `example.domain.com`
+ sap.jco.user `user`
+ sap.jco.passwd `secret`
+ sap.jco.sysnr `14`
+ sap.jco.client `800`
+ sap.jco.lang `EN`

#### SMPT Services configuration
+ smtp.host `smtp.gmail.com`
+ smtp.port `587`
+ smtp.user `sender%40gmail.com`
+ smtp.password `secret`

#### Mail details
+ mail.from `mail.from@example.com`
+ mail.to `info@examplecom`
+ mail.subject `Employee Migration Report`
]]>
		</section>
		<section id="api_calls">
		<![CDATA[
&nbsp;
]]>
		</section>
		<section id="default_endpoints_xml">
		<![CDATA[
This is the file where you will found the inbound and outbound sides of your integration app.
This Anypoint Template has only an [HTTP Inbound Endpoint](http://www.mulesoft.org/documentation/display/current/HTTP+Endpoint+Reference) as the way to trigger the use case.
This flow has Exception Strategy that basically consists on invoking the *defaultChoiseExceptionStrategy* defined in *errorHandling.xml* file.
For the pourpose of this particular Anypoint Template the *triggerFlow* executes the Batch Job in *businessLogic.xml* which handles all the logic of it.

$H$H#  Inbound Flow
**HTTP Inbound Endpoint** - Start Report Generation
+ `${http.port}` is set as a property to be defined either on a property file or in CloudHub environment variables.
+ The path configured by default is `migrateemployees` and you are free to change for the one you prefer.
+ The host name for all endpoints in your CloudHub configuration should be defined as `localhost`. CloudHub will then route requests from your application domain URL to the endpoint.
+ The endpoint is configured as a *request-response* since as a result of calling it the response will be the total of Employees migrated and filtered by the criteria specified.
]]>
		</section>
		<section id="default_business_logic_xml">
		<![CDATA[
Functional aspect of the Anypoint Template is implemented on this XML, directed by a batch job that will be responsible for creations/updates. The several message processors constitute four high level actions that fully implement the logic of this Anypoint Template:

1. Job execution is invoked from triggerFlow (endpoints.xml).
2. During the Process stage, each Employee will be filtered depending on, if it has an existing matching Employee in the Workday instance. The matching is performed by querying a Workday instance for an entry with the given External Reference ID.
3. The next step will insert a new record into the Workday instance if there was none found in the previous step.
4. The final step will update a Workday employee.

Finally during the On Complete stage the Anypoint Template will logoutput statistics data into the console.
]]>
		</section>
	</sections>
</configuration>